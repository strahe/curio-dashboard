type PipelineSummary {
    id: Address! @goTag(key: "db", value: "sp_id")
    sdr: Int! @goField(forceResolver: true)
    trees: Int! @goField(forceResolver: true)
    precommitMsg: Int! @goField(forceResolver: true)
    waitSeed: Int! @goField(forceResolver: true)
    porep: Int! @goField(forceResolver: true)
    commitMsg: Int! @goField(forceResolver: true)
    done: Int! @goField(forceResolver: true)
    failed: Int! @goField(forceResolver: true)
}

enum TaskStatus {
    Pending
    Running
    Completed
    Failed
}

enum PorepStage {
  SDR
  TreeD
  TreeC
  TreeR
  Synthetic
  PrecommitMsg
  PrecommitMsgWait
  WaitSeed
  Porep
  CommitMsg
  CommitMsgWait
  Finalize
  MoveStorage
}

type TaskCompactStage {
    name: String!
    status: TaskStatus!
    taskId: Int
}

type Porep {
    id: ID! @goField(forceResolver: true)
    spId: Address!
    sectorNumber: Int!
    createTime: Time!
    regSealProof: Int!
    ticketEpoch: Int
    ticketValue: Bytes
    taskIdSdr: Int
    afterSdr: Boolean!
    treeDCid: String
    taskIdTreeD: Int
    afterTreeD: Boolean!
    taskIdTreeC: Int
    afterTreeC: Boolean!
    treeRCid: String
    taskIdTreeR: Int
    afterTreeR: Boolean!
    precommitMsgCid: String
    taskIdPrecommitMsg: Int
    afterPrecommitMsg: Boolean!
    seedEpoch: Int
    precommitMsgTsk: Bytes
    afterPrecommitMsgSuccess: Boolean!
    seedValue: Bytes
    taskIdPorep: Int
    porepProof: Bytes
    afterPorep: Boolean!
    taskIdFinalize: Int
    afterFinalize: Boolean!
    taskIdMoveStorage: Int
    afterMoveStorage: Boolean!
    commitMsgCid: String
    taskIdCommitMsg: Int
    afterCommitMsg: Boolean!
    commitMsgTsk: Bytes
    afterCommitMsgSuccess: Boolean!
    failed: Boolean!
    failedAt: Time
    failedReason: String!
    failedReasonMsg: String!
    taskIdSynth: Int
    afterSynth: Boolean!
    userSectorDurationEpochs: Int
    precommitReadyAt: Time
    commitReadyAt: Time

    status: TaskStatus! @goField(forceResolver: true)
    stage: PorepStage! @goField(forceResolver: true)
    currentTask: Task @goField(forceResolver: true)
    compactStages: [TaskCompactStage!]! @goField(forceResolver: true)
}

extend type Query {
    poreps: [Porep]
    porep(sp: Address!, sectorNumber: Int!): Porep
    pipelinesSummary: [PipelineSummary]
}
