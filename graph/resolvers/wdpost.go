package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.68

import (
	"context"
	"fmt"

	"github.com/web3tea/curio-dashboard/graph"
	"github.com/web3tea/curio-dashboard/graph/cachecontrol"
	"github.com/web3tea/curio-dashboard/graph/model"
	"github.com/web3tea/curio-dashboard/types"
)

// WdpostProof is the resolver for the wdpostProof field.
func (r *queryResolver) WdpostProof(ctx context.Context, spID types.Address, provingPeriodStart int, deadline int, partition int) (*model.WdpostProofs, error) {
	cachecontrol.SetHint(ctx, cachecontrol.ScopePrivate, wdpostDefaultCacheAge)
	return r.loader.WdpostProof(ctx, spID, provingPeriodStart, deadline, partition)
}

// WdpostProofs is the resolver for the wdpostProofs field.
func (r *queryResolver) WdpostProofs(ctx context.Context, spID *types.Address, offset int, limit int) ([]*model.WdpostProofs, error) {
	cachecontrol.SetHint(ctx, cachecontrol.ScopePrivate, wdpostDefaultCacheAge)
	return r.loader.WdpostProofs(ctx, spID, offset, limit)
}

// WdpostProofsCount is the resolver for the wdpostProofsCount field.
func (r *queryResolver) WdpostProofsCount(ctx context.Context, spID *types.Address) (int, error) {
	cachecontrol.SetHint(ctx, cachecontrol.ScopePrivate, wdpostDefaultCacheAge)
	return r.loader.WdpostProofsCount(ctx, spID)
}

// ID is the resolver for the id field.
func (r *wdpostProofsResolver) ID(ctx context.Context, obj *model.WdpostProofs) (string, error) {
	return fmt.Sprintf("%d-%d-%d-%d", obj.SpID.ID(), obj.ProvingPeriodStart, obj.Deadline, obj.Partition), nil
}

// WdpostProofs returns graph.WdpostProofsResolver implementation.
func (r *Resolver) WdpostProofs() graph.WdpostProofsResolver { return &wdpostProofsResolver{r} }

type wdpostProofsResolver struct{ *Resolver }
