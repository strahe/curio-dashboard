name: CI

on:
  push:
  pull_request:
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  eslint:
    name: eslint
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ui
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          setup-node: true
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint

  i18n-check:
      name: i18n-check
      runs-on: ubuntu-24.04
      defaults:
        run:
          working-directory: ui
      steps:
        - uses: actions/checkout@v4
        - uses: ./.github/actions/setup
          with:
            setup-node: true
        - name: Install dependencies
          run: pnpm install --frozen-lockfile
        - name: Check i18n translations
          run: pnpm i18n:check

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          setup-go: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          args: --timeout=10m

  gen-check:
    name: gen-check
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          setup-go: true
          setup-node: true
      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
      - name: Install dependencies
        run: |
          cd ui && pnpm install --frozen-lockfile
      - name: Run code generation
        run: make gen
      - name: Check for changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Generated code is not up to date. Please run 'make gen' locally and commit the changes."
            git status --porcelain
            git diff
            exit 1
          fi

  build:
    name: build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          setup-system-deps: true
          setup-node: true
          setup-go: true
      - run: make ui-deps ui
      - run: |
          make go-dist
          cp curio-dashboard curio-dashboard-linux-amd64
      - name: Upload release asset
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.ref_name }} curio-dashboard-linux-amd64

      - name: Set up QEMU
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch

      - name: Build and push Docker
        if: github.event_name == 'release' || github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ./ci.Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
